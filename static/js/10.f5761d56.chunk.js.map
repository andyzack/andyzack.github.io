{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/@camwiegert/typical/typical.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["_iterableToArray","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","_toArray","arr","isArray","TypeError","_toConsumableArray","i","arr2","length","editor","writer","deleter","type","node","a","async","args","arg","wait","text","overlap","getOverlap","textContent","perform","ms","Promise","resolve","setTimeout","edits","speed","op","Math","random","edit","requestAnimationFrame","startIndex","endIndex","slice","join","start","end","NaN","findIndex","char","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","steps","loop","className","wrapper","typicalRef","useRef","Component","classNames","styles","module","exports","runtime","undefined","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","keys","object","key","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/10.f5761d56.chunk.js","sourcesContent":["export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}