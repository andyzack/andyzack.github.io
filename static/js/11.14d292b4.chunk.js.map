{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../node_modules/@camwiegert/typical/typical.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/index.js","../node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_iterableToArray","iter","Symbol","iterator","Object","from","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_toConsumableArray","isArray","TypeError","_toArray","_createForOfIteratorHelper","F","s","done","value","e","_e","f","it","err","normalCompletion","didErr","step","next","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","editor","writer","deleter","type","node","a","wait","text","overlap","getOverlap","textContent","perform","ms","setTimeout","edits","speed","op","Math","random","edit","requestAnimationFrame","startIndex","endIndex","join","start","end","NaN","findIndex","char","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","memo","steps","loop","className","wrapper","typicalRef","useRef","Component","classNames","styles","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"4FAAAA,EAAOC,QAAU,EAAQ,K,iCCAV,SAASC,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECPM,SAASE,EAAiBC,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOF,MAAMM,KAAKJ,GCA3E,SAASK,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIL,OAAOM,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBV,MAAMM,KAAKI,GACxC,cAANA,GAAqB,2CAA2CO,KAAKP,GAAW,EAAiBF,EAAGC,QAAxG,GCHa,SAASS,EAAmBvB,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAMmB,QAAQxB,GAAM,OAAO,EAAiBA,GDGzC,CAAkBA,IAAQ,EAAgBA,IAAQ,EAA2BA,IELvE,WACb,MAAM,IAAIyB,UAAU,wIFIwE,GGD/E,SAASC,EAAS1B,GAC/B,OCLa,SAAyBA,GACtC,GAAIK,MAAMmB,QAAQxB,GAAM,OAAOA,EDIxB,CAAeA,IAAQ,EAAgBA,IAAQ,EAA2BA,IELpE,WACb,MAAM,IAAIyB,UAAU,6IFIqE,G,sBGJ5E,SAASE,EAA2Bd,GACjD,GAAsB,qBAAXL,QAAgD,MAAtBK,EAAEL,OAAOC,UAAmB,CAC/D,GAAIJ,MAAMmB,QAAQX,KAAOA,EAAI,EAA2BA,IAAK,CAC3D,IAAIV,EAAI,EAEJyB,EAAI,aAER,MAAO,CACLC,EAAGD,EACHb,EAAG,WACD,OAAIZ,GAAKU,EAAEX,OAAe,CACxB4B,MAAM,GAED,CACLA,MAAM,EACNC,MAAOlB,EAAEV,OAGb6B,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIH,UAAU,yIAGtB,IAAIU,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLT,EAAG,WACDM,EAAKtB,EAAEL,OAAOC,aAEhBM,EAAG,WACD,IAAIwB,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,KClD1B,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBlB,EAAQmB,EAAKnB,MACjB,MAAOoB,GAEP,YADAN,EAAOM,GAILD,EAAKpB,KACPc,EAAQb,GAERqB,QAAQR,QAAQb,GAAOsB,KAAKP,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMf,GACbW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQhB,GAGlE,SAASgB,EAAOX,GACdM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASX,GAGnEU,OAAMe,O,+BCGKC,G,WAMAC,G,WAMAC,G,SA9CKC,E,oEAAf,WAAoBC,GAApB,qCAAAC,EAAA,qEAA6BT,EAA7B,iCAA6BA,EAA7B,gBACeA,EADf,yCACQT,EADR,iBAEgBA,EAFhB,OAGU,WAHV,OAMU,WANV,QASU,aATV,wCAIe,EAAKiB,EAAMjB,GAJ1B,4DAOemB,EAAKnB,GAPpB,6DAUeA,EAAG,WAAH,GAAIiB,GAAJ,OAAaR,IAV5B,6DAaeT,EAbf,wE,+BAkBQ,E,sEAAf,WAAoBiB,EAAMG,GAA1B,eAAAF,EAAA,6DACUG,EAAUC,EAAWL,EAAKM,YAAaH,GADjD,SAEUI,EAAQP,EAAD,YAAWF,EAAQE,EAAKM,YAAaF,IAArC,EAAkDP,EAAOM,EAAMC,MAFhF,4C,+BAKeF,E,oEAAf,WAAoBM,GAApB,SAAAP,EAAA,sEACU,IAAIf,SAAQ,SAAAR,GAAO,OAAI+B,WAAW/B,EAAS8B,MADrD,4C,+BAIeD,E,sEAAf,WAAuBP,EAAMU,GAA7B,+BAAAT,EAAA,sDAAoCU,EAApC,+BAA4C,GAA5C,IACqBf,EAAOc,IAD5B,gEACeE,EADf,SAEWZ,GAFX,SAGcE,EAAKS,EAAQA,GAASE,KAAKC,SAAW,KAHpD,uM,sBAOO,SAAUlB,EAAOc,GAAjB,+EACgBA,GADhB,yGAEC,OADOK,EADR,iBAEO,SAACf,GAAD,OAAUgB,uBAAsB,kBAAMhB,EAAKM,YAAcS,MAFhE,gPAAA/C,IAAA,yEAMA,SAAU6B,EAAV,mGAAqBM,EAArB,WAA4Bc,EAA5B,+BAAyC,EAAGC,EAA5C,+BAAuDf,EAAKnE,OAA5D,YACIiF,EAAaC,GADjB,gBAEC,OAFD,SAEOf,EAAKlD,MAAM,IAAKgE,GAAYE,KAAK,IAFxC,6DAMA,SAAUrB,EAAV,mGAAsBK,EAAtB,WAA6Bc,EAA7B,+BAA0C,EAAGC,EAA7C,+BAAwDf,EAAKnE,OAA7D,YACIkF,EAAWD,GADf,gBAEC,OAFD,SAEOd,EAAKlD,MAAM,IAAKiE,GAAUC,KAAK,IAFtC,6DAMA,SAASd,EAAWe,EAApB,GAAqC,IAANC,EAAM,cACxC,MAAO,YAAID,GAAJ,CAAWE,MAAKC,WAAU,SAACC,EAAMvF,GAAP,OAAaoF,EAAIpF,KAAOuF,K,sCCrD7D,SAAqBC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,qBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAMhC,KAAO,WAEI,QAAb4B,GACEE,EAAKI,WACPJ,EAAKK,aAAaH,EAAOF,EAAKI,YAKhCJ,EAAKM,YAAYJ,GAGfA,EAAMK,WACRL,EAAMK,WAAWC,QAAUZ,EAE3BM,EAAMI,YAAYP,SAASU,eAAeb,K,oTCU9C,EAAec,gBA3BC,SAAC,G,IAAEC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,U,IAAWC,eAAoB,MAAV,IAAU,EACvDC,EAAaC,iBAAnB,MACMC,EAAN,EACMC,EAAa,CAACC,G,OAEpB,G,EACE,QAAAN,G,qBAGQ,WACJD,IAAJ,I,gBACOG,EAAL,sBAAA7C,KACK,kBAAW0C,E,gBAEdG,EADF,kBAEKzG,MAAMA,GAANA,QAFL,U,gBAOKyG,EAAL,0BAIG,qBAAWlB,IAAX,EAA4BgB,UAAWK,EAAWA,KAAzD,U,0BCvBF,IAAIE,EAAW,SAAUrH,GACvB,aAEA,IAAIsH,EAAK1G,OAAOM,UACZqG,EAASD,EAAGE,eAEZC,EAA4B,oBAAX/G,OAAwBA,OAAS,GAClDgH,EAAiBD,EAAQ9G,UAAY,aACrCgH,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQK,aAAe,gBAE/C,SAASC,EAAKC,EAASC,EAASvE,EAAMwE,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQ/G,qBAAqBkH,EAAYH,EAAUG,EAC/EC,EAAYzH,OAAO0H,OAAOH,EAAejH,WACzCqH,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAqMZ,SAA0BT,EAAStE,EAAM6E,GACvC,IAAIG,EA9KuB,iBAgL3B,OAAO,SAAgBC,EAAQxF,GAC7B,GA/KoB,cA+KhBuF,EACF,MAAM,IAAIE,MAAM,gCAGlB,GAlLoB,cAkLhBF,EAA6B,CAC/B,GAAe,UAAXC,EACF,MAAMxF,EAKR,OAAO0F,IAMT,IAHAN,EAAQI,OAASA,EACjBJ,EAAQpF,IAAMA,IAED,CACX,IAAI2F,EAAWP,EAAQO,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUP,GACnD,GAAIQ,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBR,EAAQI,OAGVJ,EAAQW,KAAOX,EAAQY,MAAQZ,EAAQpF,SAElC,GAAuB,UAAnBoF,EAAQI,OAAoB,CACrC,GAlNqB,mBAkNjBD,EAEF,MADAA,EAhNc,YAiNRH,EAAQpF,IAGhBoF,EAAQa,kBAAkBb,EAAQpF,SAEN,WAAnBoF,EAAQI,QACjBJ,EAAQc,OAAO,SAAUd,EAAQpF,KAGnCuF,EA3NkB,YA6NlB,IAAIY,EAASC,EAASvB,EAAStE,EAAM6E,GACrC,GAAoB,WAAhBe,EAAOnF,KAAmB,CAO5B,GAJAuE,EAAQH,EAAQvG,KAhOA,YAFK,iBAsOjBsH,EAAOnG,MAAQ8F,EACjB,SAGF,MAAO,CACLhH,MAAOqH,EAAOnG,IACdnB,KAAMuG,EAAQvG,MAGS,UAAhBsH,EAAOnF,OAChBuE,EA9OgB,YAiPhBH,EAAQI,OAAS,QACjBJ,EAAQpF,IAAMmG,EAAOnG,OA7QPqG,CAAiBxB,EAAStE,EAAM6E,GAE7CF,EAcT,SAASkB,EAAS9F,EAAIgG,EAAKtG,GACzB,IACE,MAAO,CAAEgB,KAAM,SAAUhB,IAAKM,EAAGrC,KAAKqI,EAAKtG,IAC3C,MAAOb,GACP,MAAO,CAAE6B,KAAM,QAAShB,IAAKb,IAhBjCtC,EAAQ+H,KAAOA,EAoBf,IAOIkB,EAAmB,GAMvB,SAASb,KACT,SAASsB,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkBlC,GAAkB,WAClC,OAAO/D,MAGT,IAAIkG,EAAWjJ,OAAOkJ,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BzC,GAC5BC,EAAOnG,KAAK2I,EAAyBrC,KAGvCkC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BzI,UAClCkH,EAAUlH,UAAYN,OAAO0H,OAAOsB,GAQtC,SAASM,EAAsBhJ,GAC7B,CAAC,OAAQ,QAAS,UAAUiJ,SAAQ,SAASxB,GAC3CzH,EAAUyH,GAAU,SAASxF,GAC3B,OAAOQ,KAAK8E,QAAQE,EAAQxF,OAoClC,SAASiH,EAAc/B,EAAWgC,GAgChC,IAAIC,EAgCJ3G,KAAK8E,QA9BL,SAAiBE,EAAQxF,GACvB,SAASoH,IACP,OAAO,IAAIF,GAAY,SAASvH,EAASC,IAnC7C,SAASyH,EAAO7B,EAAQxF,EAAKL,EAASC,GACpC,IAAIuG,EAASC,EAASlB,EAAUM,GAASN,EAAWlF,GACpD,GAAoB,UAAhBmG,EAAOnF,KAEJ,CACL,IAAIsG,EAASnB,EAAOnG,IAChBlB,EAAQwI,EAAOxI,MACnB,OAAIA,GACiB,kBAAVA,GACPsF,EAAOnG,KAAKa,EAAO,WACdoI,EAAYvH,QAAQb,EAAMyI,SAASnH,MAAK,SAAStB,GACtDuI,EAAO,OAAQvI,EAAOa,EAASC,MAC9B,SAAST,GACVkI,EAAO,QAASlI,EAAKQ,EAASC,MAI3BsH,EAAYvH,QAAQb,GAAOsB,MAAK,SAASoH,GAI9CF,EAAOxI,MAAQ0I,EACf7H,EAAQ2H,MACP,SAASpH,GAGV,OAAOmH,EAAO,QAASnH,EAAOP,EAASC,MAvBzCA,EAAOuG,EAAOnG,KAiCZqH,CAAO7B,EAAQxF,EAAKL,EAASC,MAIjC,OAAOuH,EAaLA,EAAkBA,EAAgB/G,KAChCgH,EAGAA,GACEA,KAkHV,SAASvB,EAAoBF,EAAUP,GACrC,IAAII,EAASG,EAASnI,SAAS4H,EAAQI,QACvC,QAvSE5E,IAuSE4E,EAAsB,CAKxB,GAFAJ,EAAQO,SAAW,KAEI,UAAnBP,EAAQI,OAAoB,CAE9B,GAAIG,EAASnI,SAAT,SAGF4H,EAAQI,OAAS,SACjBJ,EAAQpF,SAlTZY,EAmTIiF,EAAoBF,EAAUP,GAEP,UAAnBA,EAAQI,QAGV,OAAOM,EAIXV,EAAQI,OAAS,QACjBJ,EAAQpF,IAAM,IAAIxB,UAChB,kDAGJ,OAAOsH,EAGT,IAAIK,EAASC,EAASZ,EAAQG,EAASnI,SAAU4H,EAAQpF,KAEzD,GAAoB,UAAhBmG,EAAOnF,KAIT,OAHAoE,EAAQI,OAAS,QACjBJ,EAAQpF,IAAMmG,EAAOnG,IACrBoF,EAAQO,SAAW,KACZG,EAGT,IAAI7F,EAAOkG,EAAOnG,IAElB,OAAMC,EAOFA,EAAKpB,MAGPuG,EAAQO,EAAS8B,YAAcxH,EAAKnB,MAGpCsG,EAAQ7F,KAAOoG,EAAS+B,QAQD,WAAnBtC,EAAQI,SACVJ,EAAQI,OAAS,OACjBJ,EAAQpF,SAtWVY,GAgXFwE,EAAQO,SAAW,KACZG,GANE7F,GA3BPmF,EAAQI,OAAS,QACjBJ,EAAQpF,IAAM,IAAIxB,UAAU,oCAC5B4G,EAAQO,SAAW,KACZG,GAoDX,SAAS6B,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBpH,KAAK0H,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI1B,EAAS0B,EAAMQ,YAAc,GACjClC,EAAOnF,KAAO,gBACPmF,EAAOnG,IACd6H,EAAMQ,WAAalC,EAGrB,SAASd,EAAQN,GAIfvE,KAAK0H,WAAa,CAAC,CAAEJ,OAAQ,SAC7B/C,EAAYiC,QAAQW,EAAcnH,MAClCA,KAAK8H,OAAM,GA8Bb,SAASzB,EAAO0B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAShE,GAC9B,GAAIiE,EACF,OAAOA,EAAevK,KAAKsK,GAG7B,GAA6B,oBAAlBA,EAAShJ,KAClB,OAAOgJ,EAGT,IAAKE,MAAMF,EAAStL,QAAS,CAC3B,IAAIC,GAAK,EAAGqC,EAAO,SAASA,IAC1B,OAASrC,EAAIqL,EAAStL,QACpB,GAAImH,EAAOnG,KAAKsK,EAAUrL,GAGxB,OAFAqC,EAAKT,MAAQyJ,EAASrL,GACtBqC,EAAKV,MAAO,EACLU,EAOX,OAHAA,EAAKT,WAtdT8B,EAudIrB,EAAKV,MAAO,EAELU,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMmG,GAIjB,SAASA,IACP,MAAO,CAAE5G,WAteP8B,EAseyB/B,MAAM,GA+MnC,OA3mBA0H,EAAkBxI,UAAY+I,EAAG3I,YAAcqI,EAC/CA,EAA2BrI,YAAcoI,EACzCC,EAA2B9B,GACzB6B,EAAkBmC,YAAc,oBAYlC7L,EAAQ8L,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,oBAAXD,GAAyBA,EAAOzK,YAClD,QAAO0K,IACHA,IAAStC,GAG2B,uBAAnCsC,EAAKH,aAAeG,EAAKzK,QAIhCvB,EAAQiM,KAAO,SAASF,GAUtB,OATInL,OAAOsL,eACTtL,OAAOsL,eAAeH,EAAQpC,IAE9BoC,EAAOI,UAAYxC,EACb9B,KAAqBkE,IACzBA,EAAOlE,GAAqB,sBAGhCkE,EAAO7K,UAAYN,OAAO0H,OAAO2B,GAC1B8B,GAOT/L,EAAQoM,MAAQ,SAASjJ,GACvB,MAAO,CAAEuH,QAASvH,IAsEpB+G,EAAsBE,EAAclJ,WACpCkJ,EAAclJ,UAAUyG,GAAuB,WAC7C,OAAOhE,MAET3D,EAAQoK,cAAgBA,EAKxBpK,EAAQqM,MAAQ,SAASrE,EAASC,EAASvE,EAAMwE,EAAamC,QACxC,IAAhBA,IAAwBA,EAAc/G,SAE1C,IAAI7C,EAAO,IAAI2J,EACbrC,EAAKC,EAASC,EAASvE,EAAMwE,GAC7BmC,GAGF,OAAOrK,EAAQ8L,oBAAoB7D,GAC/BxH,EACAA,EAAKiC,OAAOa,MAAK,SAASkH,GACxB,OAAOA,EAAOzI,KAAOyI,EAAOxI,MAAQxB,EAAKiC,WAuKjDwH,EAAsBD,GAEtBA,EAAGpC,GAAqB,YAOxBoC,EAAGvC,GAAkB,WACnB,OAAO/D,MAGTsG,EAAG9I,SAAW,WACZ,MAAO,sBAkCTnB,EAAQsM,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIpJ,KAAOqJ,EACdD,EAAKhB,KAAKpI,GAMZ,OAJAoJ,EAAKE,UAIE,SAAS9J,IACd,KAAO4J,EAAKlM,QAAQ,CAClB,IAAI8C,EAAMoJ,EAAKG,MACf,GAAIvJ,KAAOqJ,EAGT,OAFA7J,EAAKT,MAAQiB,EACbR,EAAKV,MAAO,EACLU,EAQX,OADAA,EAAKV,MAAO,EACLU,IAsCX1C,EAAQgK,OAASA,EAMjBxB,EAAQtH,UAAY,CAClBI,YAAakH,EAEbiD,MAAO,SAASiB,GAcd,GAbA/I,KAAKgJ,KAAO,EACZhJ,KAAKjB,KAAO,EAGZiB,KAAKuF,KAAOvF,KAAKwF,WAjfjBpF,EAkfAJ,KAAK3B,MAAO,EACZ2B,KAAKmF,SAAW,KAEhBnF,KAAKgF,OAAS,OACdhF,KAAKR,SAtfLY,EAwfAJ,KAAK0H,WAAWlB,QAAQoB,IAEnBmB,EACH,IAAK,IAAInL,KAAQoC,KAEQ,MAAnBpC,EAAKqL,OAAO,IACZrF,EAAOnG,KAAKuC,KAAMpC,KACjBqK,OAAOrK,EAAKF,MAAM,MACrBsC,KAAKpC,QAhgBXwC,IAsgBF8I,KAAM,WACJlJ,KAAK3B,MAAO,EAEZ,IACI8K,EADYnJ,KAAK0H,WAAW,GACLG,WAC3B,GAAwB,UAApBsB,EAAW3I,KACb,MAAM2I,EAAW3J,IAGnB,OAAOQ,KAAKoJ,MAGd3D,kBAAmB,SAAS4D,GAC1B,GAAIrJ,KAAK3B,KACP,MAAMgL,EAGR,IAAIzE,EAAU5E,KACd,SAASsJ,EAAOC,EAAKC,GAYnB,OAXA7D,EAAOnF,KAAO,QACdmF,EAAOnG,IAAM6J,EACbzE,EAAQ7F,KAAOwK,EAEXC,IAGF5E,EAAQI,OAAS,OACjBJ,EAAQpF,SAjiBZY,KAoiBYoJ,EAGZ,IAAK,IAAI9M,EAAIsD,KAAK0H,WAAWjL,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI2K,EAAQrH,KAAK0H,WAAWhL,GACxBiJ,EAAS0B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOgC,EAAO,OAGhB,GAAIjC,EAAMC,QAAUtH,KAAKgJ,KAAM,CAC7B,IAAIS,EAAW7F,EAAOnG,KAAK4J,EAAO,YAC9BqC,EAAa9F,EAAOnG,KAAK4J,EAAO,cAEpC,GAAIoC,GAAYC,EAAY,CAC1B,GAAI1J,KAAKgJ,KAAO3B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,GACzB,GAAIvH,KAAKgJ,KAAO3B,EAAMG,WAC3B,OAAO8B,EAAOjC,EAAMG,iBAGjB,GAAIiC,GACT,GAAIzJ,KAAKgJ,KAAO3B,EAAME,SACpB,OAAO+B,EAAOjC,EAAME,UAAU,OAG3B,KAAImC,EAMT,MAAM,IAAIzE,MAAM,0CALhB,GAAIjF,KAAKgJ,KAAO3B,EAAMG,WACpB,OAAO8B,EAAOjC,EAAMG,gBAU9B9B,OAAQ,SAASlF,EAAMhB,GACrB,IAAK,IAAI9C,EAAIsD,KAAK0H,WAAWjL,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI2K,EAAQrH,KAAK0H,WAAWhL,GAC5B,GAAI2K,EAAMC,QAAUtH,KAAKgJ,MACrBpF,EAAOnG,KAAK4J,EAAO,eACnBrH,KAAKgJ,KAAO3B,EAAMG,WAAY,CAChC,IAAImC,EAAetC,EACnB,OAIAsC,IACU,UAATnJ,GACS,aAATA,IACDmJ,EAAarC,QAAU9H,GACvBA,GAAOmK,EAAanC,aAGtBmC,EAAe,MAGjB,IAAIhE,EAASgE,EAAeA,EAAa9B,WAAa,GAItD,OAHAlC,EAAOnF,KAAOA,EACdmF,EAAOnG,IAAMA,EAETmK,GACF3J,KAAKgF,OAAS,OACdhF,KAAKjB,KAAO4K,EAAanC,WAClBlC,GAGFtF,KAAK4J,SAASjE,IAGvBiE,SAAU,SAASjE,EAAQ8B,GACzB,GAAoB,UAAhB9B,EAAOnF,KACT,MAAMmF,EAAOnG,IAcf,MAXoB,UAAhBmG,EAAOnF,MACS,aAAhBmF,EAAOnF,KACTR,KAAKjB,KAAO4G,EAAOnG,IACM,WAAhBmG,EAAOnF,MAChBR,KAAKoJ,KAAOpJ,KAAKR,IAAMmG,EAAOnG,IAC9BQ,KAAKgF,OAAS,SACdhF,KAAKjB,KAAO,OACa,WAAhB4G,EAAOnF,MAAqBiH,IACrCzH,KAAKjB,KAAO0I,GAGPnC,GAGTuE,OAAQ,SAASrC,GACf,IAAK,IAAI9K,EAAIsD,KAAK0H,WAAWjL,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI2K,EAAQrH,KAAK0H,WAAWhL,GAC5B,GAAI2K,EAAMG,aAAeA,EAGvB,OAFAxH,KAAK4J,SAASvC,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACP/B,IAKb,MAAS,SAASgC,GAChB,IAAK,IAAI5K,EAAIsD,KAAK0H,WAAWjL,OAAS,EAAGC,GAAK,IAAKA,EAAG,CACpD,IAAI2K,EAAQrH,KAAK0H,WAAWhL,GAC5B,GAAI2K,EAAMC,SAAWA,EAAQ,CAC3B,IAAI3B,EAAS0B,EAAMQ,WACnB,GAAoB,UAAhBlC,EAAOnF,KAAkB,CAC3B,IAAIsJ,EAASnE,EAAOnG,IACpBoI,EAAcP,GAEhB,OAAOyC,GAMX,MAAM,IAAI7E,MAAM,0BAGlB8E,cAAe,SAAShC,EAAUd,EAAYC,GAa5C,OAZAlH,KAAKmF,SAAW,CACdnI,SAAUqJ,EAAO0B,GACjBd,WAAYA,EACZC,QAASA,GAGS,SAAhBlH,KAAKgF,SAGPhF,KAAKR,SA1qBPY,GA6qBOkF,IAQJjJ,EA1rBM,CAisBgBD,EAAOC,SAGtC,IACE2N,mBAAqBtG,EACrB,MAAOuG,GAUPC,SAAS,IAAK,yBAAdA,CAAwCxG","file":"static/js/11.14d292b4.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export async function type(node, ...args) {\n    for (const arg of args) {\n        switch (typeof arg) {\n            case 'string':\n                await edit(node, arg);\n                break;\n            case 'number':\n                await wait(arg);\n                break;\n            case 'function':\n                await arg(node, ...args);\n                break;\n            default:\n                await arg;\n        }\n    }\n}\n\nasync function edit(node, text) {\n    const overlap = getOverlap(node.textContent, text);\n    await perform(node, [...deleter(node.textContent, overlap), ...writer(text, overlap)]);\n}\n\nasync function wait(ms) {\n    await new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function perform(node, edits, speed = 60) {\n    for (const op of editor(edits)) {\n        op(node);\n        await wait(speed + speed * (Math.random() - 0.5));\n    }\n}\n\nexport function* editor(edits) {\n    for (const edit of edits) {\n        yield (node) => requestAnimationFrame(() => node.textContent = edit);\n    }\n}\n\nexport function* writer([...text], startIndex = 0, endIndex = text.length) {\n    while (startIndex < endIndex) {\n        yield text.slice(0, ++startIndex).join('');\n    }\n}\n\nexport function* deleter([...text], startIndex = 0, endIndex = text.length) {\n    while (endIndex > startIndex) {\n        yield text.slice(0, --endIndex).join('');\n    }\n}\n\nexport function getOverlap(start, [...end]) {\n    return [...start, NaN].findIndex((char, i) => end[i] !== char);\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","\nimport React, { useRef, useEffect, memo } from \"react\";\nimport { type, type as loopedType } from \"@camwiegert/typical\";\n\nimport styles from './styles.css'\n\nconst Typical = ({ steps, loop, className, wrapper = \"p\" }) => {\n  const typicalRef = useRef(null);\n  const Component = wrapper;\n  const classNames = [styles.typicalWrapper];\n  \n  if (className) {\n    classNames.unshift(className);\n  }\n\n  useEffect(() => {\n    if (loop === Infinity) {\n      type(typicalRef.current, ...steps, loopedType);\n    } else if (typeof loop === \"number\") {\n      type(\n        typicalRef.current,\n        ...Array(loop)\n          .fill(steps)\n          .flat()\n      );\n    } else {\n      type(typicalRef.current, ...steps);\n    }\n  });\n\n  return <Component ref={typicalRef} className={classNames.join(' ')}/>;\n}\n\nexport default memo(Typical)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}